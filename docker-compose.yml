version: "3"
services:
    upa-mongo:
        build:
            context: .
            dockerfile: ./dockerfiles/Dockerfile-mongo
        container_name: "upa-mongo"
        ports:
            - "27017-27019:27017-27019"
        expose:
            - "27017-27019"
        volumes:
            - "mongo-data:/data/db"
            - "./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:z"

    upa-postgres:
        build:
            context: .
            dockerfile: ./dockerfiles/Dockerfile-postgres
        container_name: "upa-postgres"
        volumes:
            - "postgres-data:/var/lib/postgresql/data"
        ports:
            - "5432:5432"
        expose:
            - "5432"

    upa-importer:
        build:
            context: .
            dockerfile: ./dockerfiles/Dockerfile-importer
        container_name: "upa-importer"
        command: "bash /importer/entrypoint.sh"
        ports:
            - "4200:4200"
        expose:
            - "4200"
        depends_on: 
            - upa-postgres
            - upa-mongo

    upa-api:
        build:
            context: .
            dockerfile: ./dockerfiles/Dockerfile-api
        container_name: "upa-api"
        command: "bash /go/src/upa/api/entrypoint.sh"
        depends_on: 
            - upa-postgres
            - upa-mongo
        ports:
            - "8080:8080"
        expose:
            - "8080"
        environment:
            - GIN_MODE=release

    upa-app:
        build:
            context: .
            dockerfile: ./dockerfiles/Dockerfile-ui
        container_name: "upa-app"
        command: ["nginx", "-g", "daemon off;"]
        depends_on:
            - upa-api
        ports:
            - "80:80"
        expose:
            - "80"

volumes:
    mongo-data:
    postgres-data:
